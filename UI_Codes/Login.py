# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Login.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import pickle
import hashlib
import sys
sys.path.append('../classes/')
sys.path.append('../DataBase/')
from Customer import customer
from Seller import seller
from Shop import shop
from Main import Main
class Ui_LoginPage(object):
    def setupUi(self, LoginPage):
        # with open('../DataBase/logined.pkl', 'rb') as handle:
        #         logined_account = pickle.load(handle)
        # if 'customer' in str(type(logined_account)):
        #         self.Login()

        # elif 'seller' in str(type(logined_account)):
        #         self.Login()
        # elif 'shop' in str(type(logined_account)):
        #         self.Login()
        self.page = LoginPage

        LoginPage.setObjectName("LoginPage")
        LoginPage.resize(450, 500)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(LoginPage.sizePolicy().hasHeightForWidth())
        LoginPage.setSizePolicy(sizePolicy)
        LoginPage.setMinimumSize(QtCore.QSize(450, 500))
        LoginPage.setMaximumSize(QtCore.QSize(450, 500))
        self.verticalLayout = QtWidgets.QVBoxLayout(LoginPage)
        self.verticalLayout.setObjectName("verticalLayout")
        self.UpLayout = QtWidgets.QGridLayout()
        self.UpLayout.setSizeConstraint(QtWidgets.QLayout.SetMinimumSize)
        self.UpLayout.setContentsMargins(10, 30, 10, 30)
        self.UpLayout.setSpacing(47)
        self.UpLayout.setObjectName("UpLayout")
        self.UserName_LB = QtWidgets.QLabel(LoginPage)
        self.UserName_LB.setObjectName("UserName_LB")
        self.UpLayout.addWidget(self.UserName_LB, 0, 0, 1, 1, QtCore.Qt.AlignLeft)
        self.UserName_LE = QtWidgets.QLineEdit(LoginPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.UserName_LE.sizePolicy().hasHeightForWidth())
        self.UserName_LE.setSizePolicy(sizePolicy)
        self.UserName_LE.setMinimumSize(QtCore.QSize(293, 40))
        self.UserName_LE.setMaximumSize(QtCore.QSize(500, 500))
        self.UserName_LE.setStyleSheet("border: 1px solid #a6a6a6;\n"
"border-top-color: #949494;\n"
"border-radius: 3px;\n"
"box-shadow: 0 1px 0 rgba(255,255,255,.5), 0 1px 0 rgba(0,0,0,.07) inset;\n"
"outline: 0;\n"
"margin-top: 1px;\n"
"")
        self.UserName_LE.setObjectName("UserName_LE")
        self.UpLayout.addWidget(self.UserName_LE, 0, 1, 1, 1)
        self.Password_LB = QtWidgets.QLabel(LoginPage)
        self.Password_LB.setObjectName("Password_LB")
        self.UpLayout.addWidget(self.Password_LB, 1, 0, 1, 1, QtCore.Qt.AlignLeft)
        self.Password_LE = QtWidgets.QLineEdit(LoginPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Password_LE.sizePolicy().hasHeightForWidth())
        self.Password_LE.setSizePolicy(sizePolicy)
        self.Password_LE.setMinimumSize(QtCore.QSize(293, 40))
        self.Password_LE.setMaximumSize(QtCore.QSize(500, 500))
        self.Password_LE.setStyleSheet("border: 1px solid #a6a6a6;\n"
"border-top-color: #949494;\n"
"border-radius: 3px;\n"
"box-shadow: 0 1px 0 rgba(255,255,255,.5), 0 1px 0 rgba(0,0,0,.07) inset;\n"
"outline: 0;")
        self.Password_LE.setEchoMode(QtWidgets.QLineEdit.Password)
        self.Password_LE.setObjectName("Password_LE")
        self.UpLayout.addWidget(self.Password_LE, 1, 1, 1, 1, QtCore.Qt.AlignLeft)
        self.Position_LB = QtWidgets.QLabel(LoginPage)
        self.Position_LB.setObjectName("Position_LB")
        self.UpLayout.addWidget(self.Position_LB, 2, 0, 1, 1, QtCore.Qt.AlignLeft)
        self.Position_CB = QtWidgets.QComboBox(LoginPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Position_CB.sizePolicy().hasHeightForWidth())
        self.Position_CB.setSizePolicy(sizePolicy)
        self.Position_CB.setMinimumSize(QtCore.QSize(293, 40))
        self.Position_CB.setMaximumSize(QtCore.QSize(500, 500))
        self.Position_CB.setStyleSheet("border: 1px solid #a6a6a6;\n"
"border-top-color: #949494;\n"
"border-radius: 3px;\n"
"box-shadow: 0 1px 0 rgba(255,255,255,.5), 0 1px 0 rgba(0,0,0,.07) inset;\n"
"outline: 0;")
        self.Position_CB.setObjectName("Position_CB")
        self.Position_CB.addItem("")
        self.Position_CB.addItem("")
        self.Position_CB.addItem("")
        self.UpLayout.addWidget(self.Position_CB, 2, 1, 1, 1, QtCore.Qt.AlignLeft)
        self.UpLayout.setColumnStretch(0, 1)
        self.UpLayout.setColumnStretch(1, 1)
        self.verticalLayout.addLayout(self.UpLayout)
        self.Login_PB = QtWidgets.QPushButton(LoginPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.Login_PB.sizePolicy().hasHeightForWidth())
        
        self.Error_Email_LB = QtWidgets.QLabel(LoginPage)
        self.Error_Email_LB.setObjectName("Error_Email_LB")
        self.Error_Email_LB.setStyleSheet("color: Red;")
        self.verticalLayout.addWidget(self.Error_Email_LB, 0, QtCore.Qt.AlignHCenter)
        self.Error_Email_LB.setHidden(True)
        
        self.Login_PB.setSizePolicy(sizePolicy)
        self.Login_PB.setMinimumSize(QtCore.QSize(200, 50))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.Login_PB.setFont(font)
        self.Login_PB.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.Login_PB.setAutoFillBackground(False)
        self.Login_PB.setStyleSheet("background: #f0c14b;\n"
"border-color: #a88734 #9c7e31 #846a29;\n"
"color: black;\n"
"")
        self.Login_PB.setCheckable(False)
        self.Login_PB.setChecked(False)
        self.Login_PB.setObjectName("Login_PB")
        self.Login_PB.clicked.connect(self.logintoaccount)
        self.verticalLayout.addWidget(self.Login_PB, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.DownLayout = QtWidgets.QVBoxLayout()
        self.DownLayout.setContentsMargins(-1, 0, -1, 50)
        self.DownLayout.setSpacing(7)
        self.DownLayout.setObjectName("DownLayout")
        self.CreateAcc_LB = QtWidgets.QLabel(LoginPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CreateAcc_LB.sizePolicy().hasHeightForWidth())
        self.CreateAcc_LB.setSizePolicy(sizePolicy)
        self.CreateAcc_LB.setMaximumSize(QtCore.QSize(16777215, 30))
        self.CreateAcc_LB.setStyleSheet("")
        self.CreateAcc_LB.setObjectName("CreateAcc_LB")
        self.DownLayout.addWidget(self.CreateAcc_LB, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignBottom)
        self.CreateAcc_PB = QtWidgets.QPushButton(LoginPage)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.CreateAcc_PB.sizePolicy().hasHeightForWidth())
        self.CreateAcc_PB.setSizePolicy(sizePolicy)
        self.CreateAcc_PB.setMinimumSize(QtCore.QSize(300, 0))
        self.CreateAcc_PB.setMaximumSize(QtCore.QSize(16777215, 16777215))
        self.CreateAcc_PB.setObjectName("CreateAcc_PB")
        self.CreateAcc_PB.clicked.connect(self.go_to_register)
        self.DownLayout.addWidget(self.CreateAcc_PB, 0, QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.DownLayout.setStretch(0, 1)
        self.verticalLayout.addLayout(self.DownLayout)
        
        self.retranslateUi(LoginPage)
        QtCore.QMetaObject.connectSlotsByName(LoginPage)

    def go_to_register(self):
        from Register import Ui_RegisterPage
        self.RegisterPage = QtWidgets.QWidget()
        self.ui = Ui_RegisterPage()
        self.ui.setupUi(self.RegisterPage)
        
        self.page.hide()
        self.RegisterPage.show()

    def logintoaccount(self):
        #self.UserName_LE = 
        email = self.UserName_LE.text().lower()
        password = self.Password_LE.text()
        password_hashed = hashlib.sha256(bytes(password, encoding='utf-8')).hexdigest()
        position = self.Position_CB.currentText()
        flag = False
        if position=='Customer':
                with open('../DataBase/Customers.pkl', 'rb') as handle:
                        customers_list = pickle.load(handle)   
                for c in customers_list:
                        if c.Email == email:
                                if c.Password == password_hashed:
                                        flag = True
                                        with open('../DataBase/logined.pkl', 'wb') as handle:
                                                pickle.dump(c, handle)
                                        self.page.hide()
                                        Main()
                                        sys.exit(0)
                
        elif position=='Seller':
                with open('../DataBase/Sellers.pkl', 'rb') as handle:
                        sellers_list = pickle.load(handle)   
                for s in sellers_list:
                        if s.Email == email:
                                if s.Password == password_hashed:
                                        flag = True
                                        with open('../DataBase/logined.pkl', 'wb') as handle:
                                                pickle.dump(s, handle)
                                        self.page.hide()
                                        Main()
                                        sys.exit(0)
                                
        elif position=='Shop Admin':
                with open('../DataBase/Operators.pkl', 'rb') as handle:
                        operators_list = pickle.load(handle)   
                for o in operators_list:
                        if o.Email == email:
                                if o.Password == password_hashed:
                                        flag = True
                                        with open('../DataBase/logined.pkl', 'wb') as handle:
                                                pickle.dump(o, handle)
                                        self.page.hide()
                                        Main()
                                        sys.exit(0)
        if flag ==False :
                _translate = QtCore.QCoreApplication.translate
                self.Error_Email_LB.setHidden(False)
                self.Error_Email_LB.setText(_translate("LoginPage", 'Your email or password in wrong!'))
              



    def retranslateUi(self, LoginPage):
        _translate = QtCore.QCoreApplication.translate
        LoginPage.setWindowTitle(_translate("LoginPage", "Login"))
        self.UserName_LB.setText(_translate("LoginPage", "Email: "))
        self.UserName_LE.setPlaceholderText(_translate("LoginPage", "Email"))
        self.Password_LB.setText(_translate("LoginPage", "Password"))
        self.Password_LE.setPlaceholderText(_translate("LoginPage", "Password"))
        self.Position_LB.setText(_translate("LoginPage", "Position"))
        self.Position_CB.setItemText(0, _translate("LoginPage", "Customer"))
        self.Position_CB.setItemText(1, _translate("LoginPage", "Seller"))
        self.Position_CB.setItemText(2, _translate("LoginPage", "Shop Admin"))
        self.Login_PB.setText(_translate("LoginPage", "Login"))
        self.CreateAcc_LB.setText(_translate("LoginPage", "Have you not registered before?"))
        self.CreateAcc_PB.setText(_translate("LoginPage", "Create your account"))


# if __name__ == "__main__":
#     import sys
#     app = QtWidgets.QApplication(sys.argv)
#     LoginPage = QtWidgets.QWidget()
#     ui = Ui_LoginPage()
# #     x = ui.Login()
# #     if x==False:
# #         ui.setupUi(LoginPage)
# #         LoginPage.show()
#     ui.setupUi(LoginPage)
#     LoginPage.show()
#     sys.exit(app.exec_())
